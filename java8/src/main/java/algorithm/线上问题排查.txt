Linux 常用的性能分析工具使用包括 :
top(cpu)、free(内存)、df(磁盘)、dstat(网络流量)、pstack、vmstat、strace(底层系统调用) 等。

JVM定位排查问题时最为常用命令包括:jps（进程）、jmap（内存）、jstack（线程）、jinfo(参数) 等。
jps: 查询当前机器所有 JAVA 进程信息；
jmap: 输出某个 java 进程内存情况 (如:产生那些对象及数量等)；
jstack: 打印某个 Java 线程的线程栈信息；
jinfo: 用于查看 jvm 的配置参数。

一般分析CPU或者内存异常情况可以通过以下几步：
    查看日志
    查看CPU情况
    查看TCP情况
    查看java线程，jstack
        (1) 使用 top 命令找到占用 CPU 最高的进程 pid
        (2) 利用 top -Hp {pid} 命令查找出占 CPU 最高的线程 tid
        (3) 占用率最高的线程 ID 为 6900，将其转换为 16 进制形式 (因为 java native 线程以 16 进制形式输出)
                printf ‘%x\n’ 6900
        (4) 利用 jstack 打印出 java 线程调用栈信息
                jstack {pid} | grep tid -A 50 –color
    查看java堆，jmap
        jmap -heap pid 输出当前进程 JVM 堆新生代、老年代、持久代等请情况，GC 使用的算法等信息
        jmap -histo:live {pid} | head -n 10 输出当前进程内存中所有对象包含的大小
        jmap -dump:format=b,file=/usr/local/logs/gc/dump.hprof {pid} 以二进制输出档当前内存的堆情况，然后可以导入 MAT 等工具进行
    通过MAT分析堆文件，寻找无法被回收的对象

